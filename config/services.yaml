# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    twitter_api_key: '%env(TWITTER_API_KEY)%'
    twitter_api_secret_key: '%env(TWITTER_API_SECRET_KEY)%'
    twitter_bearer_token: '%env(TWITTER_BEARER_TOKEN)%'
    twitter_access_token: '%env(TWITTER_ACCESS_TOKEN)%'
    twitter_access_token_secret: '%env(TWITTER_ACCESS_TOKEN_SECRET)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $twitter_api_key: '%twitter_api_key%'
            $twitter_api_secret_key: '%twitter_api_secret_key%'
            $twitter_bearer_token: '%twitter_bearer_token%'
            $twitter_access_token: '%twitter_access_token%'
            $twitter_access_token_secret: '%twitter_access_token_secret%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
